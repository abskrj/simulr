version: '3.8'

services:
  # Redis for session management
  redis:
    image: redis:7-alpine
    container_name: physics-sim-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - physics-sim-network

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: physics-sim-backend
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=sqlite:///./simulation.db
      - LOG_LEVEL=INFO
      - SESSION_TIMEOUT=3600
      - MAX_CHAT_HISTORY=50
      # Add your API keys here or use .env file
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
    volumes:
      - ./backend:/app
      - backend_data:/app/data
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/api/health')" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - physics-sim-network

  # React Frontend with Nginx
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: physics-sim-frontend
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      # Mount nginx logs
      - ./logs/nginx:/var/log/nginx
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - physics-sim-network

volumes:
  redis_data:
    driver: local
  backend_data:
    driver: local

networks:
  physics-sim-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
